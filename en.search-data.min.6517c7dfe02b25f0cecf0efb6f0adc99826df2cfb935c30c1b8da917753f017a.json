[{"id":0,"href":"/website/docs/blog/20240721/","title":"2024年7月21日","section":"活動報告","content":" DHシンポジウム「図書資料の構造化　研究データとしてのテキストデータ構築」発表資料 # 2024年7月21日のDHシンポジウム「図書資料の構造化　研究データとしてのテキストデータ構築」のポスター発表資料を掲載します。 シンポジウム発表時の資料では、勉強会参加者の個人名・所属を記載していましたが、HP掲載にあたって「若手図書館DH勉強会」に変更しています。ご承知おきください。 "},{"id":1,"href":"/website/docs/vscode/","title":"TEI/XML編集環境","section":"Docs","content":" VSCodeでTEIを編集する環境を整える # この記事は2024年8月時点の情報に基づいて作成しています。\n前提 # XMLファイルの編集には専用のエディタ（編集ソフト）が便利 TEIの分野ではOxgenが代表的なソフトであるが、ライセンス費用が高価なため、初学者や学術機関に所属していない人には手を出しにくい テキストエディタの一つであるVSCodeは様々な拡張機能をインストールすることで機能追加ができる。XMLやTEI/XML編集用の拡張機能も開発・公開されている 手順 # VSCodeのインストール\n下記サイトからOSに応じたインストーラをダウンロードし、実行する。 https://code.visualstudio.com/download 拡張機能のインストール\nJapanese Language Pack for VS Code https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-ja UIを日本語表示にするための拡張機能 TEI Japanese Editor https://marketplace.visualstudio.com/items?itemName=ldas.vscode-japanese-tei TEI/XMLのマークアップに便利な機能（Webview、ruby・appの入力補助、カスタム表示）が追加できる Webview表示を縦書きにする設定 拡張機能を右クリック＞拡張機能の設定を開く ODDファイル：vs-code-japanese-teiを選択 Scholarly XML https://marketplace.visualstudio.com/items?itemName=raffazizzi.sxml XMLの構文（整形式）チェック スキーマに基づいた文書の妥当性チェック 現在の環境で使用できる要素のサジェストとツールチップ Ctrl+Eで選択部分をタグで囲む Auto Close Tag https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag Auto Rename Tag ★任意 https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag Close HTML/XML tag★任意 https://marketplace.visualstudio.com/items?itemName=Compulim.compulim-vscode-closetag 日本語スキーマファイルの作成と適用\nTEIスキーマ TEI/XMLのタグのルールを記述した「スキーマ」ファイルを用意 スキーマファイルを読み込むことで使用できるタグの候補や解説を表示できる デフォルトだとタグの説明は英語だが、日本語用のスキーマファイルを作成すれば、タグの説明は日本語で表示される Romaの解説 スキーマファイルを編集・作成するためのウェブアプリケーション 手順 https://romabeta.tei-c.org/ にアクセス TEI_ALL（customize by reducing TEI）を選択し、STARTを押下 Language of elements and attributes　と　Documentation Language　を日本語にする 「RELAX NG schema」を選択し、ファイルをダウンロード。任意（ここではTEIファイルと同じ階層）の場所に置く ユーザスニペットの設定\nファイル＞ユーザ設定＞ユーザー スニペットの構成＞下記の文字列をコピペ＞任意のファイル名（ここでは「teiall.json」）で保存。 2行目,”のhrefの値には3で作成したスキーマファイルのパス（絶対パス）を記載する \u0026#34;TEI P5 All\u0026#34;: { \u0026#34;prefix\u0026#34;: \u0026#34;teiall\u0026#34;, \u0026#34;body\u0026#34;: [ \u0026#34;\u0026lt;?xml version=\\\u0026#34;1.0\\\u0026#34; encoding=\\\u0026#34;UTF-8\\\u0026#34;?\u0026gt;\u0026#34;, \u0026#34;\u0026lt;?xml-model href=\\\u0026#34;tei_all.rng\\\u0026#34; schematypens=\\\u0026#34;http://relaxng.org/ns/structure/1.0\\\u0026#34; type=\\\u0026#34;application/xml\\\u0026#34;?\u0026gt;\u0026#34;, \u0026#34;\u0026lt;TEI xmlns=\\\u0026#34;http://www.tei-c.org/ns/1.0\\\u0026#34;\u0026gt;\u0026#34;, \u0026#34; \u0026lt;teiHeader\u0026gt;\u0026#34;, \u0026#34; \u0026lt;fileDesc\u0026gt;\u0026#34;, \u0026#34; \u0026lt;titleStmt\u0026gt;\u0026#34;, \u0026#34; \u0026lt;title\u0026gt;${1:Title}\u0026lt;/title\u0026gt;\u0026#34;, \u0026#34; \u0026lt;/titleStmt\u0026gt;\u0026#34;, \u0026#34; \u0026lt;publicationStmt\u0026gt;\u0026#34;, \u0026#34; \u0026lt;p\u0026gt;${2:Publication Information}\u0026lt;/p\u0026gt;\u0026#34;, \u0026#34; \u0026lt;/publicationStmt\u0026gt;\u0026#34;, \u0026#34; \u0026lt;sourceDesc\u0026gt;\u0026#34;, \u0026#34; \u0026lt;p\u0026gt;${3:Information about the source}\u0026lt;/p\u0026gt;\u0026#34;, \u0026#34; \u0026lt;/sourceDesc\u0026gt;\u0026#34;, \u0026#34; \u0026lt;/fileDesc\u0026gt;\u0026#34;, \u0026#34; \u0026lt;/teiHeader\u0026gt;\u0026#34;, \u0026#34; \u0026lt;text\u0026gt;\u0026#34;, \u0026#34; \u0026lt;body\u0026gt;\u0026#34;, \u0026#34; \u0026lt;p\u0026gt;${4:Some text here.}\u0026lt;/p\u0026gt;\u0026#34;, \u0026#34; \u0026lt;/body\u0026gt;\u0026#34;, \u0026#34; \u0026lt;/text\u0026gt;\u0026#34;, \u0026#34;\u0026lt;/TEI\u0026gt;\u0026#34; ], \u0026#34;description\u0026#34;: \u0026#34;Oxygen-like TEI (P5) All Boilerplate\u0026#34; } 動作確認 # 「ファイル」＞「新しいテキストファイル」でxmlファイルを作成→任意の名前を付けて保存する。 「teiall」と入力し、4で作成したユーザスニペットが呼び出せることを確認する。 「\u0026lt;」と入力し、候補のTEIタグと日本語の説明文が表示されることを確認する。 TEIJapaneseEditorの機能 コマンドが使えるか ショートカット 動作 キーボード Generate panel プレビューを開く ctrl+k v Insert ruby ルビを挿入する ctrl+k r Insert warichu 割注を挿入する ctrl+k w 参考サイト # TEI/XMLファイルの編集を支援するVSCode拡張機能の使用例 フリーソフトで快適TEI/XML（Oxygenを使わない道） - digitalnagasakiのブログ VSCode で XML（Scholarly XML🚧編） - UTDH / 東京大学人文情報学 "},{"id":2,"href":"/website/docs/tei_heike/","title":"TEIマークアップ","section":"Docs","content":" はしがき # 勉強会はDHに関する文献の読書会からスタートした。読書会では\u0026quot;Digital Humanities in the Library : Challenges and Opportunities for Subject Specialists\u0026quot;（注）を読み進めたが、その中ではTEI（Text Encoding Initiative）に関する取り組みがしばしば紹介されており、読書会が進むにつれてメンバーの中でTEIに対する興味・関心が高まっていった。理論だけではなく、実際に手を動かしてDHについてより深く学びたいという意見が出たことや、TEIマークアップの経験があるメンバーがいたこともあり、 勉強会でTEIマークアップを実践することになった。\n勉強会ではTEIマークアップの練習台として『平家物語』百二十句本の京都府立京都学・歴彩館蔵本と国立国会図書館蔵本の二本を選択した。マークアップした章段は「扇の的」。選定にあたり、考慮したことは次の3点である。\n有名な日本古典文学作品であること ほどよく異同があり、校異情報のマークアップの練習ができること 原本の画像がインターネット上で公開されていること なお、翻刻は勉強会メンバーが担当した。\n（注）Arianne, H.,Laura, B and Liorah, G (Eds.): Digital Humanities in the Library: Challenges and Opportunities for Subject Specialists,Association of Research Libraries (2015).\nマークアップの方針 # 以下は勉強会で『平家物語』「扇の的」にTEIマークアップを実践するにあたり、共有したマークアップの方針を例を挙げながら整理したものである。なお、方針の策定にあたっては下記ページを参考にさせていただいた。\n参考：日本語古典籍TEI本文データ作成要領\nhttps://github.com/TEI-EAJ/jpn_classical/blob/master/jpn_classical_guideline.md\n異同箇所のマークアップについて # 使用した京都府立京都学・歴彩館蔵本（以下、「京都本」と称する）と国立国会図書館蔵本（以下、「国会本」と称する）はそれぞれ国書データベースと国立国会図書館デジタルコレクションで原本の画像が公開されている。\n京都本は704コマ目から、国会本は15コマ目からが今回マークアップに取り組んだ「扇の的」の章段にあたる。\n京都本：https://kokusho.nijl.ac.jp/biblio/100171975/704\n国会本：https://dl.ndl.go.jp/pid/2546105/1/15\n諸本の情報は\u0026lt;listWit\u0026gt;を用いて\u0026lt;sourceDesc\u0026gt;の中に次のように記述。\n\u0026lt;listWit\u0026gt; \u0026lt;witness xml:id=\u0026#34;京都\u0026#34;\u0026gt;百二十句本　京都本\u0026lt;/witness\u0026gt; \u0026lt;witness xml:id=\u0026#34;国会\u0026#34;\u0026gt;百二十句本　国会本\u0026lt;/witness\u0026gt; \u0026lt;/listWit\u0026gt; 今回は京都本を底本、国会本を対校本とした。\nしたがって、異同は次のようにマークアップする（例文の異同箇所は下線で表示）。\n（京都本）あはさぬきに平家をそむき\n（国会本）あわさぬきに平家をそむき\n\u0026lt;app\u0026gt;\u0026lt;lem wit=\u0026#34;#京都\u0026#34;\u0026gt;あは\u0026lt;/lem\u0026gt;\u0026lt;rdg wit=\u0026#34;#国会\u0026#34;\u0026gt;あわ\u0026lt;/rdg\u0026gt;\u0026lt;/app\u0026gt;さぬきに平家をそむき このように、底本である京都本については\u0026lt;lem\u0026gt;、対校本である国会本は\u0026lt;rdg\u0026gt;で囲む。\n先述の\u0026lt;listWit\u0026gt;でxmlidをそれぞれ京都 国会としたので、アトリビュートであるwitの後ろは#京都 #国会とする。\n異同は単語単位で取ることとする。\nすなわち、例えば次の文章をマークアップする場合、下記のようにはマークアップしない。\n（京都本）はたそていろえたるひたゝれに\n（国会本）はたそでいろへたるひたゝれに\n【誤１】\nはたそ\u0026lt;app\u0026gt;\u0026lt;lem wit=\u0026#34;#京都\u0026#34;\u0026gt;て\u0026lt;/lem\u0026gt;\u0026lt;rdg wit=\u0026#34;#国会\u0026#34;\u0026gt;で\u0026lt;/rdg\u0026gt;\u0026lt;/app\u0026gt; いろ\u0026lt;app\u0026gt;\u0026lt;lem wit=\u0026#34;#京都\u0026#34;\u0026gt;え\u0026lt;/lem\u0026gt;\u0026lt;rdg wit=\u0026#34;#国会\u0026#34;\u0026gt;へ\u0026lt;/rdg\u0026gt;\u0026lt;/app\u0026gt;たるひたゝれに 【誤２】\n\u0026lt;app\u0026gt;\u0026lt;lem wit=\u0026#34;#京都\u0026#34;\u0026gt;はたそていろえ\u0026lt;/lem\u0026gt;\u0026lt;rdg wit=\u0026#34;#国会\u0026#34;\u0026gt;はたそでいろへ\u0026lt;/rdg\u0026gt;\u0026lt;/app\u0026gt;たるひたゝれに こちらが正解。\n\u0026lt;app\u0026gt;\u0026lt;lem wit=\u0026#34;#京都\u0026#34;\u0026gt;はたそて\u0026lt;/lem\u0026gt;\u0026lt;rdg wit=\u0026#34;#国会\u0026#34;\u0026gt;はたそで\u0026lt;/rdg\u0026gt;\u0026lt;/app\u0026gt; \u0026lt;app\u0026gt;\u0026lt;lem wit=\u0026#34;#京都\u0026#34;\u0026gt;いろえ\u0026lt;/lem\u0026gt;\u0026lt;rdg wit=\u0026#34;#国会\u0026#34;\u0026gt;いろへ\u0026lt;/rdg\u0026gt;\u0026lt;/app\u0026gt;たるひたゝれに 人物情報 # 人物は\u0026lt;persName\u0026gt;でタグ付けする。誰を指すかわかる場合は\u0026lt;persName corresp=\u0026quot;#那須与一\u0026quot;\u0026gt;のようにする。\n\u0026lt;body\u0026gt;（本文情報）のうしろ、\u0026lt;back\u0026gt;の中にある\u0026lt;listPerson\u0026gt;で人物のリストを作ることができる。リストの中身の例は次の通り。\n\u0026lt;person xml:id=\u0026#34;那須与一\u0026#34;\u0026gt; \u0026lt;persName\u0026gt; \u0026lt;surname\u0026gt;那須\u0026lt;/surname\u0026gt; \u0026lt;forename\u0026gt;与一\u0026lt;/forename\u0026gt; \u0026lt;/persName\u0026gt; \u0026lt;idno type=\u0026#34;VIAF\u0026#34;\u0026gt;http://viaf.org/viaf/6524312\u0026lt;/idno\u0026gt; \u0026lt;/person\u0026gt; このように、VIAFなどと紐付けることも可能。\nなお、本文でタグ付けしたときのpersName corresp=#の後ろで使うのはperson xml:id=の後ろの人名と同じ形。\n（代名詞や役職名など、本文中異なる名前で呼ばれていたとしても、同じ人物を指していることがわかるようにするための統一名）\n地名 # 要領は\u0026lt;persName\u0026gt;と同じ。\n地名は\u0026lt;placeName\u0026gt;でタグ付けする。どこを指すかわかる場合は\u0026lt;placeName corresp=\u0026quot;#鎌倉\u0026quot;\u0026gt;かまくら\u0026lt;/placeName\u0026gt;のようにする。\n\u0026lt;text\u0026gt;（本文情報）のうしろ、\u0026lt;back\u0026gt;の中にある\u0026lt;listPlace\u0026gt;で地名のリストを作ることができる。リストの中身の例は次の通り。\n\u0026lt;place xml:id=\u0026#34;鎌倉\u0026#34;\u0026gt; \u0026lt;placeName\u0026gt;鎌倉\u0026lt;/placeName\u0026gt; \u0026lt;location\u0026gt; \u0026lt;geo\u0026gt;35.31085 139.54698\u0026lt;/geo\u0026gt; \u0026lt;/location\u0026gt; \u0026lt;idno type=\u0026#34;GeoNames\u0026#34;\u0026gt;https://www.geonames.org/1860672/kamakura.html\u0026lt;/idno\u0026gt; \u0026lt;/place\u0026gt; 本文でタグ付けしたときのplaceName corresp=#の後ろで使うのはplace xml:id=の後ろの地名と同じ形。\n\u0026lt;location\u0026gt;\u0026lt;geo\u0026gt;は緯度・経度の情報。\n日付 # 日付は\u0026lt;date\u0026gt;でタグ付けする。もし具体的な日付が分かれば\u0026lt;date when=\u0026quot;1900-09-27\u0026quot;\u0026gt;のように記述する。\nページ（丁）の情報について # 各丁、本文の前にページの情報を\u0026lt;pb\u0026gt;タグで記述する。\n例えば、16丁裏は次のような感じ。\n\u0026lt;pb n=\u0026#34;16v\u0026#34; facs=\u0026#34;https://kokusho.nijl.ac.jp/biblio/100171975/705\u0026#34;/\u0026gt; アトリビュートのnの後ろに数字プラス表であればr、裏であればvでページ（丁）の情報を入れる。\nfactsの後ろは国書データベースの該当ページのURL。\n"},{"id":3,"href":"/website/docs/about/","title":"勉強会について","section":"Docs","content":" 若手図書館員DH勉強会 # 勉強会について # 若手図書館員DH勉強会は、都内近郊の若手図書館員と編集者による、デジタル・ヒューマニティーズ（Digital Humanities）の勉強会です。 図書館員はどのような形でDHに関わることができるのか、従来の図書資料やメタデータに加えて、研究利用できるデータを提供するにはどうすればいいのか、という問いのもと、複数の機関から職員が集まってDHについて学んでいます。\n主な活動内容は、DHに関する文献の読書会と日本古典籍資料のTEIマークアップです。 国内外のDHプロジェクトの事例を学びつつ、DHの知識を習得し、実践することを目標に活動しています。\n活動の詳細やTEIマークアップの構築環境などについて各ページで公開していますので、ぜひご覧ください。\n"},{"id":4,"href":"/website/docs/blog/","title":"活動報告","section":"Docs","content":" 活動報告 # 2024年7月21日 # DHシンポジウム「図書資料の構造化　研究データとしてのテキストデータ構築」に参加しました。\n"}]